<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
<entry key="node_file" type="xstring" value="settings.xml"/>
<config key="flow_stack"/>
<config key="internal_node_subsettings">
<entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
</config>
<config key="model">
<entry key="script" type="xstring" value="# libraries required%%00010library(&quot;proDA&quot;)%%00010%%00010# data input%%00010abundance_matrix &lt;- as.matrix(knime.in)%%00010%%00010# definition of conditions, replicates, contrast and reference sample%%00010test_name &lt;- knime.flow.in[[&quot;test_name&quot;]]%%00010conditions &lt;- trimws(strsplit(knime.flow.in[[&quot;conditions&quot;]],',')[[1]])%%00010replicates &lt;- trimws(strsplit(knime.flow.in[[&quot;replicates&quot;]],',')[[1]])%%00010#reference_sample &lt;- knime.flow.in[[&quot;reference_sample&quot;]]%%00010contrasts_list &lt;- trimws(strsplit(knime.flow.in[[&quot;contrast&quot;]],'[,]+')[[1]])%%00010adjust_pval &lt;- knime.flow.in[[&quot;adjP_method&quot;]]%%00010%%00010colnames(abundance_matrix) &lt;- conditions%%00010#rownames(abundance_matrix) &lt;- c(1:nrow(abundance_matrix))%%00010%%00010# distance matrix%%00010da &lt;- dist_approx(abundance_matrix)%%00010%%00010# experimental design%%00010sample_info_df &lt;- data.frame(name = colnames(abundance_matrix),stringsAsFactors = FALSE)%%00010sample_info_df$replicate &lt;- replicates%%00010sample_info_df$condition &lt;- conditions     %%00010%%00010# fit the probabilistic dropout model%%00010fit &lt;- proDA(abundance_matrix, design = ~ condition, %%00010             col_data = sample_info_df, reference_level = NULL)  %%00010%%00010%%00010partial_results_list &lt;- list()%%00010%%00010fit_names &lt;- result_names(fit)%%00010%%00010for (i in 1:length(contrasts_list)) {%%00010%%00009# splits the first contrast into two elements%%00010%%00009help_list &lt;- strsplit(contrasts_list[i], &quot;-&quot;)%%00010%%00009# creates new list which adds &quot;condition&quot; before every element of the list compatible with proDA contrasts definition%%00010%%00009help_list_conditions &lt;- lapply(help_list, function(x) paste(&quot;condition&quot;, x, sep = &quot;&quot;))%%00010%%00009# checks whether any of the condition is present in the fit_names%%00010%%00009bla &lt;-  help_list_conditions[[1]] %in% fit_names%%00010%%00009if (sum(bla) == 0) {%%00010%%00009%%00009 contrast_new &lt;- paste(help_list_conditions[[1]][1],&quot;-&quot;,help_list_conditions[[1]][2])%%00010%%00009%%00009 %%00010%%00009} else if (sum(bla) == 1) {%%00010%%00009%%00009if (bla[1] == FALSE) {%%00010%%00009%%00009contrast_new &lt;- paste(&quot;Intercept&quot;,&quot;-&quot;,help_list_conditions[[1]][2])%%00010%%00009%%00009} else if (bla[1] == TRUE) {%%00010%%00009%%00009contrast_new &lt;- help_list_conditions[[1]][1]%%00010%%00009%%00009}%%00010%%00009}%%00010%%00009test_res &lt;- test_diff(fit, contrast_new, pval_adjust_method = adjust_pval)%%00010%%00009# adjusting the colnames of the particular contrast output%%00010%%00009test_res$name &lt;- NULL%%00010%%00009colnames(test_res) &lt;- paste(contrasts_list[i],colnames(test_res),sep=&quot;_&quot;)%%00010%%00009#colnames(test_res) &lt;- paste(test_name,colnames(test_res),sep=&quot;&quot;)%%00010%%00009%%00010%%00009partial_results_list[[i]] &lt;- test_res%%00010}%%00010%%00010colnames(partial_results_list[[2]])%%00010# join all contrasts into one dataframe%%00010results = do.call(cbind, partial_results_list)%%00010colnames(results)%%00010knime.out &lt;- results%%00010colnames(knime.out)"/>
<entry key="templateUUID" type="xstring" isnull="true" value=""/>
<entry key="version" type="xstring" value="version 1.x"/>
<entry key="Output non numbers (NaN, Inf, -Inf) as missing cells" type="xboolean" value="false"/>
<entry key="sendRowNames" type="xboolean" value="true"/>
<entry key="sendBatchSize" type="xint" value="10000"/>
<entry key="knimeInType" type="xstring" value="data.frame"/>
</config>
<config key="nodeAnnotation">
<entry key="text" type="xstring" value="proDA analysis"/>
<entry key="bgcolor" type="xint" value="16777215"/>
<entry key="x-coordinate" type="xint" value="249"/>
<entry key="y-coordinate" type="xint" value="479"/>
<entry key="width" type="xint" value="142"/>
<entry key="height" type="xint" value="17"/>
<entry key="alignment" type="xstring" value="CENTER"/>
<entry key="borderSize" type="xint" value="0"/>
<entry key="borderColor" type="xint" value="16777215"/>
<entry key="defFontSize" type="xint" value="10"/>
<entry key="annotation-version" type="xint" value="20151123"/>
<config key="styles"/>
</config>
<entry key="customDescription" type="xstring" isnull="true" value=""/>
<entry key="state" type="xstring" value="CONFIGURED"/>
<entry key="factory" type="xstring" value="org.knime.r.RSnippetNodeFactory"/>
<entry key="node-name" type="xstring" value="R Snippet"/>
<entry key="node-bundle-name" type="xstring" value="KNIME R-Project nodes"/>
<entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.r"/>
<entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-bundle-version" type="xstring" value="3.7.1.v201901291055"/>
<entry key="node-feature-name" type="xstring" value="KNIME Interactive R Statistics Integration"/>
<entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.r.feature.group"/>
<entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-feature-version" type="xstring" value="3.7.1.v201901291055"/>
<config key="factory_settings"/>
<entry key="name" type="xstring" value="R Snippet"/>
<entry key="hasContent" type="xboolean" value="false"/>
<entry key="isInactive" type="xboolean" value="false"/>
<config key="ports">
<config key="port_1">
<entry key="index" type="xint" value="1"/>
<entry key="port_dir_location" type="xstring" isnull="true" value=""/>
</config>
</config>
<config key="filestores">
<entry key="file_store_location" type="xstring" isnull="true" value=""/>
<entry key="file_store_id" type="xstring" isnull="true" value=""/>
</config>
</config>
